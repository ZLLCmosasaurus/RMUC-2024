#ifndef __KINEMATICS_H
#define __KINEMATICS_H

#include "chassis_move.h"
#include <stdlib.h>
#define wheel_diameter  15.100000f			    //轮子直径(cm)
#define half_width      15.500000f		        //底盘半宽(cm)
#define half_length     16.000000f	            //底盘半长(cm)
#define chassis_radius  22.280000f              //底盘半径(cm)(轮子与底盘中心间的距离)

#define PI 	    3.141593f
#define RPM2RAD 0.104720f						//转速转角速度		1 rpm = 2pi/60 rad/s 
#define RPM2VEL 0.403171f						//转速转线速度		vel = rpn*pi*D/60  cm/s
#define VEL2RPM 2.48033f						//线速度转转度
#define M2006_REDUCTION_RATIO 36.000000f		//齿轮箱减速比
#define M3508_REDUCTION_RATIO 19.203209f		//齿轮箱减速比
#define GM6020_ENCODER_ANGLE  8192.0f


#define MAX_MOTOR_SPEED             14336		//电机最大转速，宏定义方便修改   范围0 - 10000   15336   
#define MAX_BASE_LINEAR_SPEED       120.817f    //底盘最大平移速度，单位cm/s   
#define MAX_BASE_ROTATIONAL_SPEED   7.260570f   //底盘最大旋转速度，单位rad/s    
#define NORMAL_LINEAR_SPEED         70.0f
#define NORMAL_ROTATIONAL_SPEED     0.5f
				
typedef struct
{
	float linear_vel;			                //线速度
	float rpm;						            //转速圈每分钟
}Speed_t;

typedef struct
{
	Speed_t target_speed;			
	Speed_t actual_speed;						
}Wheel_t;

//底盘几何中心的线/角速度
typedef struct
{
	float linear_x;	//m/s
	float linear_y;
	float angular_z; //角速度rpm
}Velocities_t;

typedef struct
{
	float target_angular;
	float actual_angular;
  float target_angle;
	float actual_angle;
}Application_t;

typedef struct
{
	Wheel_t wheel1;
	Wheel_t wheel2;
	Wheel_t wheel3;
	Wheel_t wheel4;
	
	Velocities_t target_velocities;		//目标线速度
	Velocities_t actual_velocities; 	//实际线速度
}Kinematics_t;

extern Kinematics_t Kinematics;
void BaseVel_To_WheelVel(float linear_x, float linear_y, float angular_z);
void Get_Base_Velocities(void);
int find_max(void);

#endif
